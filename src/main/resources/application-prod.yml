spring:
  application:
    name: fiap

  datasource:
    url: ${DEV_DB_URL:jdbc:mysql://mysql:3306/mydatabase}
    username: ${DEV_DB_USERNAME:myuser}
    password: ${DEV_DB_PASSWORD:secret}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true

  docker:
    compose:
      enabled: false

  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: notificacao-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.fase4.fiap.entity.message.*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  mail:
    host: smtp.myisp.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    from: ${EMAIL_USERNAME}
    properties:
      mail.smtp:
        auth: true
        starttls:
          enable: true
          required: true

server:
  port: 8080

app:
  url:
    base: http://localhost:8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,shutdown
  endpoint:
    shutdown:
      enabled: true
  info:
    env:
      enabled: true