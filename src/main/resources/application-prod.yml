# Datasource
spring:
  datasource:
    url: ${DEV_DB_URL:jdbc:mysql://mysql:3306/mydatabase}
    username: ${DEV_DB_USERNAME:myuser}
    password: ${DEV_DB_PASSWORD:secret}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # JPA / Hibernate
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql=true:
    hibernate:
      ddl-auto: update
      naming.physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  # Docker
  docker.compose.enabled: false

  # Kafka
  kafka:
    bootstrap-servers: localhost:9092

    consumer:
      group-id: notificacao-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "com.fase4.fiap.entity.message.*"

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  # E-mail
  mail:
    host: smtp.myisp.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    from: ${EMAIL_USERNAME}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

app:
  url:
    base: http://localhost:8080

# Debug
debug: true

# Logging
logging:
  level:
    org.springframework: debug
    com.fase4: debug